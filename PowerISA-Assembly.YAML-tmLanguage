# [PackageDev] target_format: plist, ext: tmLanguage
---
name: PowerISA-Assembly
scopeName: source.asm.PowerISA
fileTypes: [s, i, asm]
uuid: 375edd7a-cfa4-47d5-b8de-46e63a477897

patterns:
- name: string.quoted.double.PowerISA
  match: '"[^"]*"'

- name: string.quoted.single.PowerISA
  match: "'[^']*'"

- name: comment.line.semicolon
  match: ";[^\n]*\n"

- name: comment.line.asterisk
  match: "(^|[ \t])\\*(?![+-])[^\n]*\n"

- name: meta.equate.PowerISA
  match: "(?i)^([a-zA-Z0-9_][a-zA-Z0-9_\\.]*)(?=([ \t]*=|[ \t]+equ[ \t]+))"
  captures:
    '1': {name: variable.other.symbol.PowerISA}

- name: meta.macro.PowerISA
  match: "(?i)(^([a-zA-Z0-9_\\.]+)(:[ \t]*|[ \t]+)macro|^[ \t]+macro[ \t]+([a-zA-Z0-9_\\.]+))[ \t]*$"
  captures:
    '2': {name: variable.other.macro.PowerISA}
    '4': {name: variable.other.macro.PowerISA}

- name: meta.section.PowerISA
  match: "(?i)\\bsection[ \t]+(\"[^\"]+\"|'[^']+'|[^,]+)"
  captures:
    '1': {name: meta.section.name.PowerISA}

- name: meta.label.global.PowerISA
  match: "^[a-zA-Z_]([a-zA-Z0-9_]*|[a-zA-Z0-9_\\.%\\$]*[a-zA-Z0-9_])(?=$|[ \t:])"

- name: constant.numeric.hex.PowerISA
  match: (?<![a-zA-Z])\$[0-9A-Fa-f]+\b

- name: constant.numeric.octal.PowerISA
  match: (?<![a-zA-Z])@[0-7]+\b

- name: constant.numeric.binary.PowerISA
  match: (?<![a-zA-Z])%[01]+\b

- name: storage.other.register
  match: ((?i)([rv][0-9]|[rv][1-2][0-9]|[rv]3[0-1]|vs[0-9]|vs[1-5][0-9]|vs6[0-3]))?\b

- name: keyword.other.opcode.vmx.PowerISA
  match: (?i)\b(vperm)?\b

- name: keyword.other.opcode.vsx.PowerISA
  match: (?i)\b(xxswapd|xxlnand)?\b

- name: keyword.other.opcode.memory.PowerISA
  match: (?i)\b(lwa|lxvd2x|stxvd2x)?\b

- name: keyword.other.opcode.arithmetic.PowerISA
  match: (?i)\b(addi|addis|li|lis)?\b

- name: keyword.other.opcode.control.PowerISA
  match: (?i)\b(blr)?\b

- name: invalid.illegal.opcode.PowerISA
  match: (?i)\billegal\b
